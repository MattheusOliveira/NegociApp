{"version":3,"sources":["../../app-es6/services/ConnectionFactory.js"],"names":["connectionFactory","stores","version","nameDB","connection","close","Error","Promise","resolve","reject","openRequest","window","indexedDB","open","onupgradeneeded","ConnectionFactory","_createObjectStore","e","target","result","onsuccess","bind","onerror","error","name","forEach","ObjectStoreNames","constains","store","deleteObjectStore","createObjectStore","autoIncrement"],"mappings":";;;;;;AAAA,IAAIA,oBAAqB,YAAU;;AAE/B,QAAMC,SAAS,CAAC,aAAD,CAAf;AACA,QAAMC,UAAU,EAAhB;AACA,QAAMC,SAAS,YAAf;AACA,QAAIC,aAAa,IAAjB;AACA,QAAIC,QAAQ,IAAZ;;AAEA;AAEI,qCAAc;AAAA;;AACV,kBAAM,IAAIC,KAAJ,CAAU,wCAAV,CAAN;AACH;;AAJL;AAAA;AAAA,4CAM2B;AACnB,uBAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;;AAEpC,wBAAIC,cAAcC,OAAOC,SAAP,CAAiBC,IAAjB,CAAsBV,MAAtB,EAA8BD,OAA9B,CAAlB;;AAEAQ,gCAAYI,eAAZ,GAA8B,aAAK;AAC/BC,0CAAkBC,kBAAlB,CAAqCC,EAAEC,MAAF,CAASC,MAA9C;AACH,qBAFD;;AAIAT,gCAAYU,SAAZ,GAAwB,aAAK;AACzB,4BAAG,CAAChB,UAAJ,EAAgB;AACZA,yCAAaa,EAAEC,MAAF,CAASC,MAAtB;AACAd,oCAAQD,WAAWC,KAAX,CAAiBgB,IAAjB,CAAsBjB,UAAtB,CAAR;AACAA,uCAAWC,KAAX,GAAmB,YAAW;AAC1B,sCAAM,IAAIC,KAAJ,CAAU,4CAAV,CAAN;AACH,6BAFD;AAGH;AACDE,gCAAQS,EAAEC,MAAF,CAASC,MAAjB;AACH,qBATD;;AAWAT,gCAAYY,OAAZ,GAAsB,aAAK;AACvBb,+BAAOQ,EAAEC,MAAF,CAASK,KAAT,CAAeC,IAAtB;AACH,qBAFD;AAGH,iBAtBM,CAAP;AAuBH;AA9BL;AAAA;AAAA,yCAgCwBpB,UAhCxB,EAgCoC;AAC5BH,uBAAOwB,OAAP,CAAe,iBAAS;AACpB,wBAAGrB,WAAWsB,gBAAX,CAA4BC,SAA5B,CAAsCC,KAAtC,CAAH,EACAxB,WAAWyB,iBAAX,CAA6BD,KAA7B;;AAEAxB,+BAAW0B,iBAAX,CAA6BF,KAA7B,EAAoC,EAACG,eAAc,IAAf,EAApC;AACH,iBALD;AAMH;AAvCL;AAAA;AAAA,8CAyC6B;AACrB,oBAAG3B,UAAH,EAAe;AACXC;AACAD,iCAAa,IAAb;AACH;AACJ;AA9CL;;AAAA;AAAA;AAiDH,CAzDuB,EAAxB","file":"ConnectionFactory.js","sourcesContent":["var connectionFactory = (function(){\n\n    const stores = ['negociacoes'];\n    const version = 10;\n    const nameDB = 'aluraframe';\n    var connection = null;\n    var close = null;\n\n    return class ConnectionFactory {\n\n        constructor() {\n            throw new Error('Não é possível instanciar essa classe!');\n        }\n\n        static getConnection() {\n            return new Promise((resolve, reject) => {\n\n                let openRequest = window.indexedDB.open(nameDB, version);\n\n                openRequest.onupgradeneeded = e => {\n                    ConnectionFactory._createObjectStore(e.target.result);\n                }\n\n                openRequest.onsuccess = e => {\n                    if(!connection) {\n                        connection = e.target.result;\n                        close = connection.close.bind(connection);\n                        connection.close = function() {\n                            throw new Error('Você não pode fechar diretamente a conexão');\n                        };\n                    }\n                    resolve(e.target.result);\n                }\n\n                openRequest.onerror = e => {\n                    reject(e.target.error.name);\n                }\n            });\n        }\n\n        static _createStore(connection) {\n            stores.forEach(store => {\n                if(connection.ObjectStoreNames.constains(store))\n                connection.deleteObjectStore(store);\n\n                connection.createObjectStore(store, {autoIncrement:true});\n            });\n        }\n\n        static closeConnection() {\n            if(connection) {\n                close();\n                connection = null;\n            }\n        }\n\n    }\n})();\n"]}