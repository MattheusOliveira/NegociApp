{"version":3,"sources":["../../app-es6/services/NegociacaoService.js"],"names":["NegociacaoService","_http","HttpService","negociacao","connectionFactory","getConnection","then","NegociacaoDao","connection","dao","adiciona","catch","console","log","error","Error","listarTodos","negociacoes","apagarTodos","listaAtual","obterNegociacoes","filter","some","isEquals","negociacaoService","Promise","all","getNegociacoesDaSemana","getNegociacoesAnterior","getNegociacoesRetrasada","reduce","arrayFlatten","array","concat","map","Negociacao","Date","dado","data","quantidade","valor","erro","resolve","reject","get","objeto"],"mappings":"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","file":"NegociacaoService.js","sourcesContent":["class NegociacaoService {\n\n    constructor() {\n        this._http = new HttpService();\n    }\n\n    cadastraNegociacao(negociacao) {\n        return connectionFactory\n            .getConnection()\n            .then(connection => new NegociacaoDao(connection))\n            .then(dao => dao.adiciona(negociacao))\n            .then(() => 'Negociação adicionada com sucesso!')\n            .catch(error => {\n                console.log(error); //baixo nível\n                throw new Error('Não foi possível adicionar a Negociação!')\n            });\n    }\n\n    lista() {\n        return connectionFactory\n            .getConnection()\n            .then(connection => new NegociacaoDao(connection))\n            .then(dao => dao.listarTodos())\n            .then((negociacoes) => negociacoes)\n            .catch((error) => {\n                console.log(error);\n                throw new Error('Não foi possível listar as negociações')\n            });\n    }\n\n    apaga() {\n        return connectionFactory.getConnection()\n            .then(connection => new NegociacaoDao(connection))\n            .then(dao => dao.apagarTodos())\n            .then(() => 'Mensagens apagadas com sucesso!')\n            .catch((error) => {\n                console.log(error);\n                throw new Error('Não foi possível apagar as negociações');\n            });\n    }\n\n    importa(listaAtual) {\n        return this.obterNegociacoes()\n            .then(negociacoes =>\n                negociacoes.filter(negociacaoService =>\n                    !listaAtual.some(negociacao =>\n                        negociacao.isEquals(negociacaoService)))\n             ).catch((error) => {\n                 console.log(error);\n                 throw new Error('Erro ao importar as negociações');\n             });\n    }\n\n    obterNegociacoes() {\n        return Promise.all(\n                    [this.getNegociacoesDaSemana(),\n                     this.getNegociacoesAnterior(),\n                     this.getNegociacoesRetrasada()]\n        ).then((negociacoes) => {\n            return negociacoes\n                .reduce((arrayFlatten, array) => arrayFlatten.concat(array),[])\n                .map(dado => new Negociacao(new Date(dado.data), dado.quantidade, dado.valor));\n        }).catch(erro => console.log(erro));\n    }\n\n    getNegociacoesDaSemana() {\n        return new Promise((resolve, reject) => {\n                 this._http.get('negociacoes/semana').then(negociacoes => {\n                     resolve(negociacoes.map(objeto => new Negociacao(new Date(objeto.data),\n                        objeto.quantidade, objeto.valor)));\n                     reject('Não foi possível obter as negociações da semana')\n                 }).catch((erro) => {\n                     console.log(erro);\n                 })\n        });\n    }\n\n\n    getNegociacoesAnterior() {\n        return new Promise((resolve, reject) => {\n                 this._http.get('negociacoes/anterior').then(negociacoes => {\n                     resolve(negociacoes.map(objeto => new Negociacao(new Date(objeto.data),\n                        objeto.quantidade, objeto.valor)));\n                     reject('Não foi possível obter as negociações da semana')\n                 }).catch((erro) => {\n                     console.log(erro);\n                 })\n        });\n    }\n\n    getNegociacoesRetrasada() {\n        return new Promise((resolve, reject) => {\n                 this._http.get('negociacoes/retrasada').then(negociacoes => {\n                     resolve(negociacoes.map(objeto => new Negociacao(new Date(objeto.data),\n                        objeto.quantidade, objeto.valor)));\n                     reject('Não foi possível obter as negociações da semana')\n                 }).catch((erro) => {\n                     console.log(erro);\n                 })\n        });\n    }\n}\n\n\n/*Error-firts calbacak se tiver sucesso recebe o primeiro parametro null para indicar que\n    não teve erro e no segundo parametro o retorno.*/\n"]}